// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//run "npx prisma migrate dev" command to update schema 

generator client {
  provider = "prisma-client-js" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(cuid())
  name              String
  email             String        @unique
  password          String
  role              UserRole
  status            UserStatus
  created_on        DateTime      @default(now())
  updated_on        DateTime?  

  @@index(fields: [created_on])
  @@index(fields: [email])
}

model PublicGuild {
  id                String        @id @default(cuid())
  name              String        @unique
  description       String
  guild_leader      String?       @unique
  created_on        DateTime
  updated_on        DateTime?    
  status            ContentStatus

  languageId        String
  language          Language      @relation(fields: [languageId], references: [id])

  regionId          String
  region            Region        @relation(fields: [regionId], references: [id])

  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [regionId])
  @@index(fields: [languageId])
}

model AdminGuild {
  id                String        @id @default(cuid())
  name              String        @unique
  description       String
  guild_leader      String?       @unique
  created_on        DateTime
  updated_on        DateTime?    
  status            ContentStatus

  regionId          String
  region            Region        @relation(fields: [regionId], references: [id])

  languageId        String
  language          Language      @relation(fields: [languageId], references: [id])

  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [regionId])
  @@index(fields: [languageId])
}

model PublicContentCreator {
  id                String           @id @default(uuid())
  name              String           
  description       String
  videoUrl          String           
  created_on        DateTime        
  updated_on        DateTime? 
  status            ContentStatus   
  socials           Json?

  categories        PublicContentCreatorCategory[]
  languageId        String
  language          Language      @relation(fields: [languageId], references: [id])
  
  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [languageId])
}

model AdminContentCreator {
  id                String           @id @default(uuid())
  name              String           
  description       String
  videoUrl          String           
  created_on        DateTime         
  updated_on        DateTime?     
  status            ContentStatus    
  socials           Json?

  categories        AdminContentCreatorCategory[]
  languageId        String
  language          Language      @relation(fields: [languageId], references: [id])
  
  @@index(fields: [created_on])
  @@index(fields: [languageId])

}

model Category {
  id          String           @id @default(uuid())
  name        String           @unique
  description String?

  publicContentCreators PublicContentCreatorCategory[]
  AdminContentCategory AdminContentCreatorCategory[]
}

model PublicContentCreatorCategory {
  id                  String                @id @default(uuid())
  publicContentCreatorId  String
  categoryId            String

  publicContentCreator PublicContentCreator @relation(fields: [publicContentCreatorId], references: [id])
  category             Category             @relation(fields: [categoryId], references: [id])

  @@unique([publicContentCreatorId, categoryId]) 

  @@index([categoryId])
  @@index([publicContentCreatorId])
}

model AdminContentCreatorCategory {
  id                      String                @id @default(uuid()) 
  adminContentCreatorId   String
  categoryId              String

  adminContentCreator AdminContentCreator     @relation(fields: [adminContentCreatorId], references: [id])
  category             Category               @relation(fields: [categoryId], references: [id])

  @@unique([adminContentCreatorId, categoryId]) 

  @@index([categoryId])
  @@index([adminContentCreatorId])
}

model Language {
  id                String        @id @default(uuid())
  name              String        @unique

  publicGuilds      PublicGuild[]
  adminGuilds       AdminGuild[]
  publicCreators    PublicContentCreator[]
  adminCreators     AdminContentCreator[]
}

model Region {
  id                String        @id @default(cuid())
  name              String        @unique

  publicGuilds      PublicGuild[]
  adminGuilds       AdminGuild[]
}

enum ContentStatus {
  public
  private
  deleted
}

enum UserRole {
  user
  moderator
  admin
}

enum UserStatus {
  inactive
  active
  banned
  deleted
  locked
}



