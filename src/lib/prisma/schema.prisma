// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//run "npx prisma migrate dev" command to update schema 

generator client {
  provider = "prisma-client-js" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                        @id @default(cuid())
  name                String
  email               String                        @unique
  password            String
  role                UserRole
  status              UserStatus
  created_on          DateTime                      @default(now())
  updated_on          DateTime?  

  @@index(fields: [created_on])
  @@index(fields: [email])
}

model PublicGuild {
  id                  String                        @id @default(cuid())
  name                String                        @unique
  description         String
  guild_leader        String?                       @unique
  created_on          DateTime
  updated_on          DateTime?    
  status              ContentStatus

  languageId          String
  language            Language                      @relation(fields: [languageId], references: [id])

  regionId            String
  region              Region                        @relation(fields: [regionId], references: [id])
  tags                PublicGuildTag[]

  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [regionId])
  @@index(fields: [languageId])
}

model AdminGuild {
  id                  String                        @id @default(cuid())
  name                String                        @unique
  description         String
  guild_leader        String?                       @unique
  created_on          DateTime
  updated_on          DateTime?    
  status              ContentStatus

  regionId            String
  region              Region                        @relation(fields: [regionId], references: [id])

  languageId          String
  language            Language                      @relation(fields: [languageId], references: [id])
  tags                AdminGuildTag[]

  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [regionId])
  @@index(fields: [languageId])
}

model GuildTag {
  id                  String                        @id @default(uuid())
  name                String                        @unique
  description         String?

  publicGuildTags     PublicGuildTag[]
  AdminGuildTags      AdminGuildTag[]
}

model PublicGuildTag {
  id                  String                        @id @default(uuid())
  publicGuildId       String
  tagId               String

  publicGuild         PublicGuild                   @relation(fields: [publicGuildId], references: [id])
  tag                 GuildTag                      @relation(fields: [tagId], references: [id])

  @@unique([publicGuildId, tagId]) 

  @@index([tagId])
  @@index([publicGuildId])
}

model AdminGuildTag {
  id                  String                        @id @default(uuid()) 
  adminGuildId        String
  tagId               String

  adminGuild          AdminGuild                    @relation(fields: [adminGuildId], references: [id])
  tag                 GuildTag                      @relation(fields: [tagId], references: [id])

  @@unique([adminGuildId, tagId]) 

  @@index([tagId])
  @@index([adminGuildId])
}

model PublicCreator {
  id                  String                        @id @default(uuid())
  name                String           
  description         String
  videoUrl            String           
  created_on          DateTime        
  updated_on          DateTime? 
  status              ContentStatus   
  socials             Json?

  tags                PublicCreatorTag[]
  languageId          String
  language            Language                      @relation(fields: [languageId], references: [id])
  
  @@index(fields: [created_on])
  @@index(fields: [created_on, name])
  @@index(fields: [name])
  @@index(fields: [languageId])
}

model AdminCreator {
  id                  String                        @id @default(uuid())
  name                String           
  description         String
  videoUrl            String           
  created_on          DateTime         
  updated_on          DateTime?     
  status              ContentStatus    
  socials             Json?

  tags                AdminCreatorTag[]
  languageId          String
  language            Language                      @relation(fields: [languageId], references: [id])
  
  @@index(fields: [created_on])
  @@index(fields: [languageId])

}

model CreatorTag {
  id                  String                        @id @default(uuid())
  name                String                        @unique
  description         String?

  publicCreatorTags   PublicCreatorTag[]
  AdminCreatorTags    AdminCreatorTag[]
}

model PublicCreatorTag {
  id                  String                        @id @default(uuid())
  publicCreatorId     String
  tagId               String

  publicCreator       PublicCreator                 @relation(fields: [publicCreatorId], references: [id])
  tag                 CreatorTag                    @relation(fields: [tagId], references: [id])

  @@unique([publicCreatorId, tagId]) 

  @@index([tagId])
  @@index([publicCreatorId])
}

model AdminCreatorTag {
  id                    String                      @id @default(uuid()) 
  adminCreatorId        String
  tagId                 String

  adminCreator          AdminCreator                @relation(fields: [adminCreatorId], references: [id])
  tag                   CreatorTag                  @relation(fields: [tagId], references: [id])

  @@unique([adminCreatorId, tagId]) 

  @@index([tagId])
  @@index([adminCreatorId])
}

model Language {
  id                      String                    @id @default(uuid())
  name                    String                    @unique

  publicGuilds            PublicGuild[]
  adminGuilds             AdminGuild[]
  publicCreators          PublicCreator[]
  adminCreators           AdminCreator[]
}

model Region {
  id                      String                    @id @default(cuid())
  name                    String                    @unique

  publicGuilds            PublicGuild[]
  adminGuilds             AdminGuild[]
}

enum ContentStatus {
  public
  private
  deleted
}

enum UserRole {
  user
  moderator
  admin
}

enum UserStatus {
  inactive
  active
  banned
  deleted
  locked
}



